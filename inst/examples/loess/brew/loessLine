<%

getvars <- req$GET()
spanValue <-
    if (! is.null(getvars$span)) {
        as.numeric(getvars$span)
    } else {
        0.75
    }

# Make sure the response is XML
res$header("Content-Type", "image/svg+xml")

# Opening a null device with a new page
pdf(file = NULL)
grid.newpage()
# Create a new viewport that is located at the same
# position and has the same size as the original vp
newvp <- viewportCreate(panelvp, newname = "newvp")
# Original vp does not have scales, introduce them
newvp$xscale <- extendrange(xs)
newvp$yscale <- extendrange(ys)
pushViewport(newvp)
# Creating the smoother, and hide warnings (they're not useful)
ll <- suppressWarnings(loess(ys ~ xs, span = spanValue))
# Creating a line based on the smoother
grid.lines(x = xs, y = fitted(ll), default.units = "native",
           gp = gpar(col = "red"), name = "smoother")
# Creating SVG output and reducing to only the smoother line
tmp <- grid.export("")
dev.off()
gridSVGMappings(tmp$mappings)
smootherID <- getSVGMappings("smoother", "grob", "selector")
loesssvg <- querySelectorNS(tmp$svg, smootherID,
                            c(svg = "http://www.w3.org/2000/svg"))
# Export XML node to text
# Wrap in SVG for easy parsing with DOMParser
out <- paste('<svg xmlns="http://www.w3.org/2000/svg">',
             saveXML(loesssvg, file = NULL, indent = FALSE),
             "</svg>", sep = "")

%>
<%= out %>
